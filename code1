import matplotlib.pyplot as plt
import numpy as np

A = np.array([30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 600])
Vol = np.log10(A)

tr = np.array([0.37, 0.44, 0.48, 0.51, 0.53, 0.55, 0.57, 0.59, 0.60, 0.62, 0.71])
limy = 0.80
neixo = 1.3
esp = 2
ntext = 1.3

plt.figure(figsize=(30 / 2.54, 20 / 2.54), dpi=300)
plt.plot(Vol, tr, 'o', markersize=0)  # To set the axes limits

plt.xlim(np.log10(30), np.log10(600))
plt.ylim(0.00, limy)
plt.gca().set_aspect('equal', adjustable='box')  # Set equal aspect ratio

plt.vlines(Vol, ymin=0, ymax=limy, colors='snow2', linestyles='dashed', linewidth=1.5)
plt.hlines(np.arange(0, limy + 0.02, 0.02), xmin=np.log10(30), xmax=np.log10(600), colors='snow2', linestyles='dashed', linewidth=1.5)
plt.plot(Vol, tr, 'forestgreen', linestyle='solid', linewidth=esp)
B = np.polyfit(Vol, tr, 1)
plt.plot(Vol, np.polyval(B, Vol), 'forestgreen', linestyle='dashed', linewidth=esp)

plt.title('500 Hz reverberation time [s]', loc='left', pad=20, fontsize=neixo)
plt.title('Volume [mÂ³]', loc='bottom', pad=20, fontsize=neixo)
plt.xticks(Vol, A, fontsize=neixo)
plt.yticks(np.arange(0, limy + 0.2, 0.2), [f'{y:.2f}' for y in np.arange(0, limy + 0.2, 0.2)], fontsize=neixo)
plt.xlabel('')
plt.ylabel('')

plt.gca().add_artist(plt.Line2D([np.log10(269.6), np.log10(269.6)], [0, 0.603], linestyle='dotted', linewidth=2, color='red'))
plt.gca().add_artist(plt.Line2D([np.log10(249.19), np.log10(249.6)], [0, 0.593], linestyle='dotted', linewidth=2, color='navy'))
plt.gca().add_artist(plt.Line2D([np.log10(30), np.log10(269.6)], [0.6, 0.6], linewidth=2, linestyle='dotted', color='darkgoldenrod'))

plt.annotate('~0.60 seconds', xy=(np.log10(60), 0.61), fontsize=10, color='darkgoldenrod')
plt.annotate('Conference rooms', xy=(np.log10(31), 0.30), fontsize=10, color='forestgreen', rotation=14)

plt.legend(["Classroom 1", "Classroom 2"], loc='upper left', bbox_to_anchor=(0.2, 1), fancybox=False, edgecolor='none', frameon=False, fontsize=10)

plt.savefig('TBRA.png', dpi=300, bbox_inches='tight', pad_inches=0)
plt.close()
